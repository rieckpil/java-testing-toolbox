<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.rieckpil.blog</groupId>
  <artifactId>jakarta-ee-example</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <properties>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>
    <failOnMissingWebXml>false</failOnMissingWebXml>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <jakarta.jakartaee-api.version>9.1.0</jakarta.jakartaee-api.version>
    <microprofile.version>5.0</microprofile.version>
    <junit-jupiter.version>5.11.2</junit-jupiter.version>
    <mockito-core.version>5.4.0</mockito-core.version>
    <microshed-testing.version>0.9.2</microshed-testing.version>
    <testcontainers.version>1.20.4</testcontainers.version>
    <postgresql-jdbc-driver.version>42.2.16</postgresql-jdbc-driver.version>
    <mockserver-client-java.version>5.15.0</mockserver-client-java.version>
    <rest-assured.version>5.5.0</rest-assured.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers-bom</artifactId>
        <version>${testcontainers.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>jakarta.platform</groupId>
      <artifactId>jakarta.jakartaee-api</artifactId>
      <version>${jakarta.jakartaee-api.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.eclipse.microprofile</groupId>
      <artifactId>microprofile</artifactId>
      <version>${microprofile.version}</version>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.33</version>
    </dependency>

    <dependency>
      <groupId>jakarta.xml.bind</groupId>
      <artifactId>jakarta.xml.bind-api</artifactId>
      <version>3.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jaxb</groupId>
      <artifactId>jaxb-runtime</artifactId>
      <version>3.0.2</version>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito-core.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>${rest-assured.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.microshed</groupId>
      <artifactId>microshed-testing-core-jakarta</artifactId>
      <version>${microshed-testing.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.microshed</groupId>
      <artifactId>microshed-testing-core</artifactId>
      <version>${microshed-testing.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.microshed</groupId>
      <artifactId>microshed-testing-testcontainers</artifactId>
      <version>${microshed-testing.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>mockserver</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mock-server</groupId>
      <artifactId>mockserver-client-java</artifactId>
      <version>${mockserver-client-java.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>jakarta-ee-example</finalName>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.5.2</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.5.2</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
          <reportsDirectory>${project.build.directory}/test-reports</reportsDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.openliberty.tools</groupId>
        <artifactId>liberty-maven-plugin</artifactId>
        <version>3.8.2</version>
        <configuration>
          <libertyRuntimeVersion>24.0.0.12</libertyRuntimeVersion>
          <serverStartTimeout>60</serverStartTimeout>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.6.0</version>
        <executions>
          <execution>
            <id>copyJDBCDriver</id>
            <phase>compile</phase>
            <goals>
              <goal>copy</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <artifactItems>
            <artifactItem>
              <groupId>org.postgresql</groupId>
              <artifactId>postgresql</artifactId>
              <version>${postgresql-jdbc-driver.version}</version>
              <type>jar</type>
              <overWrite>false</overWrite>
              <outputDirectory>${project.basedir}/src/main/liberty/config/postgres</outputDirectory>
              <destFileName>jdbc-driver-${postgresql-jdbc-driver.version}.jar</destFileName>
            </artifactItem>
          </artifactItems>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
